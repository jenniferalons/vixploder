" vundle
set nocompatible               " be iMproved
filetype off                   " required!

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" let Vundle manage Vundle
" required!
Bundle 'gmarik/vundle'

Bundle 'tpope/vim-fugitive'
Bundle 'git://git.wincent.com/command-t.git'
Bundle 'vim-scripts/VimClojure'
Bundle 'tsaleh/vim-matchit'
Bundle 'tpope/vim-surround'
Bundle 'tpope/vim-endwise'
Bundle 'vim-ruby/vim-ruby'
Bundle 'ajwalters/tmux-background-job'
Bundle 'adamlowe/vim-slurper'
Bundle 'jnwhiteh/vim-golang'

"
" Brief help
" :BundleList          - list configured bundles
" :BundleInstall(!)    - install(update) bundles
" :BundleSearch(!) foo - search(or refresh cache first) for foo
" :BundleClean(!)      - confirm(or auto-approve) removal of unused bundles
"
" see :h vundle for more details or wiki for FAQ
" NOTE: comments after Bundle command are not allowed..


syntax on
filetype plugin indent on

colorscheme jellybeans

set autoindent
set expandtab                                   " expand tabs to spaces
set list listchars=tab:>-,trail:.,nbsp:_        " show tabs and trailing spaces
set noerrorbells                                " disable error bells
set number                                      " enable line numbers
set ruler                                       " show current position at bottom
set scrolloff=5                                 " keep at least 5 lines around cursor
set shiftwidth=2                                " indent 2 spaces for filetype indent
set tabstop=2                                   " tab = 2 spaces
set undolevels=1000                             " keep 1000 undos
set hlsearch
set laststatus=2                                " always show filenames

let g:vimclojure#HighlightBuiltins = 1
let g:vimclojure#ParenRainbow = 1

let g:CommandTMaxFiles=50000

set splitbelow
set splitright

" Leader + Custom Mappings
let mapleader = ","

" -- Toggle Line Numbers
map <Leader>n :set number!<CR>
map <Leader>p :set paste!<CR>
map <Leader>x :close<CR>
map <Leader>h :noh<CR>
map <Leader>m :MRU 

map <Leader>s :TmuxBackgroundJob<CR>
map <Leader>r :TmuxRerunBackgroundJob<CR>

map <Leader>gg :Ggrep 
map <Leader>gs :Gstatus<CR>
map <Leader>gd :Gdiff<CR>

" -- Tabs
map <Leader>1 :tabnext 1<CR>
map <Leader>2 :tabnext 2<CR>
map <Leader>3 :tabnext 3<CR>
map <Leader>4 :tabnext 4<CR>
map <Leader>5 :tabnext 5<CR>
map <Leader>6 :tabnext 6<CR>
map <Leader>7 :tabnext 7<CR>
map <Leader>8 :tabnext 8<CR>
map <Leader>9 :tabnext 9<CR>
map <Leader>0 :tabnext 0<CR>

" autocmds
if has("autocmd")
  autocmd! BufWritePost .vimrc source %
endif " has("autocmd")


"-------- Local Overrides
"If you have options you'd like to override locally for
"some reason (don't want to store something in a
"publicly-accessible repository, machine-specific settings, etc.),
"you can create a '.local_vimrc' file in your home directory
"(ie: ~/.local_vimrc) and it will be 'sourced' here and override
"any settings in this file.
"
"NOTE: YOU MAY NOT WANT TO ADD ANY LINES BELOW THIS
if filereadable(expand('~/.local_vimrc'))
  source ~/.local_vimrc
end
